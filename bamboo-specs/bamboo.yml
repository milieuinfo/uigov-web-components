---
version: 2
plan:
  project-key: UIGOV
  key: CUWC
  name: ci-uigov-web-components

stages:
  - Checkout, Install and Cache Stage:
      jobs:
        - checkout-install-and-cache
  - Build and Test Stage:
      jobs:
        - build-apps-and-libs
        - unit-component-integrator-tests
        - e2e-tests-storybook
  - Release and Publish Stage:
      jobs:
        - release-and-publish
  - Verify Release Stage:
      jobs:
        - verify-release

checkout-install-and-cache:
  requirements: &requirements
    - Docker
    - Git
    - REMOTE_ONLY
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # bamboo.yml timestamp - 2024/02/05 11:40 - for verification purposes
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: |
        # export variables
        export SECRET_GITHUB_TOKEN=${bamboo.secret_github_token}
        bash ./resources/ci-bamboo/bash/checkout-install-and-cache-docker.sh
    - script: |
        # move the folder './node_modules' to './node-modules-cache/node_modules'
        # this is done so the artifact is shared (in other jobs) in the correct folder (Bamboo 7.2 limitation)
        mkdir node-modules-cache
        mv node_modules node-modules-cache
  artifacts:
    - name: node-modules-cache
      location: node-modules-cache
      pattern: '**/*.*'
      required: true
      shared: true

build-apps-and-libs:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: bash ./resources/ci-bamboo/bash/build-apps-and-libs-docker.sh
    - script: &build-artifact |
        # move the folder './build' to './build-artifact/build'
        # this is done so the artifact is shared (in other jobs) in the correct folder (Bamboo 7.2 limitation)
        mkdir build-artifact
        mv build build-artifact
  artifacts:
    - name: artifact-build-apps-and-libs
      location: build-artifact
      pattern: '**/*.*'
      shared: true

unit-component-integrator-tests:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: bash ./resources/ci-bamboo/bash/unit-component-integrator-tests-docker.sh
  artifacts:
    - name: artifact-unit-component-integrator-tests
      location: build
      pattern: '**/*.*'

e2e-tests-storybook:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: bash ./resources/ci-bamboo/bash/e2e-tests-storybook-docker.sh
  artifacts:
    - name: artifact-e2e-tests-storybook
      location: build
      pattern: '**/*.*'

release-and-publish:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: |
        # export variables
        export SECRET_GITHUB_TOKEN=${bamboo.secret_github_token}
        export ACD_REPOSITORY_DEBIAN_LOGIN=${bamboo.acd_repository_debian_login}
        export ACD_REPOSITORY_BAMBOO_PASSWORD=${bamboo.acd_repository_bamboo_password}
        export ACD_REPOSITORY_URL=${bamboo.acd_repository_url}
        # boot the specific docker container
        bash ./resources/ci-bamboo/bash/release-and-publish-docker.sh
  artifacts:
    - name: artifact-release-and-publish
      location: build
      pattern: '**/*.*'

verify-release:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: |
        # export variables
        export ACD_REPOSITORY_DEBIAN_LOGIN=${bamboo.acd_repository_debian_login}
        export ACD_REPOSITORY_BAMBOO_PASSWORD=${bamboo.acd_repository_bamboo_password}
        export ACD_REPOSITORY_URL=${bamboo.acd_repository_url}
        # boot the specific docker container
        bash ./resources/ci-bamboo/bash/verify-release-docker.sh
  artifacts:
    - name: artifact-verify-release
      location: build
      pattern: '**/*.*'

---
version: 2
plan:
  key: UIGOV-CUWC

plan-permissions:
  - groups: developer-admin
    permissions: build

