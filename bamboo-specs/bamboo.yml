---
version: 2
plan:
  project-key: UIGOV
  key: CUWC
  name: ci-uigov-web-components

stages:
  - Checkout, Install and Cache Stage:
      jobs:
        - checkout-install-and-cache
  - Build and Test Stage:
      jobs:
        - build-apps-and-libs
        - unit-wct-component-playground-tests
        - e2e-tests-storybook
  - Release and Publish Stage:
      jobs:
        - release-and-publish
  - Verify Release Stage:
      jobs:
        - verify-release

checkout-install-and-cache:
  requirements: &requirements
    - Docker
    - Git
    - REMOTE_ONLY
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: |
        # export variables
        export test_token=${bamboo.test_token}
        export secret_github_token=${bamboo.secret_github_token}
        bash ./resources/ci/scripts/checkout-install-and-cache-docker.sh
    - script: |
        # move the folder './node_modules' to './node-modules-cache/node_modules'
        # this is done so the artifact is shared (in other jobs) in the correct folder (Bamboo 7.2 limitation)
        mkdir node-modules-cache
        mv node_modules node-modules-cache
  artifacts:
    - name: node-modules-cache
      location: node-modules-cache
      pattern: '**/*.*'
      required: true
      shared: true

build-apps-and-libs:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: bash ./resources/ci/scripts/build-apps-and-libs-docker.sh
    - script: &dist-artifact |
        # move the folder './dist' to './dist-artifact/dist'
        # this is done so the artifact is shared (in other jobs) in the correct folder (Bamboo 7.2 limitation)
        mkdir dist-artifact
        mv dist dist-artifact
  artifacts:
    - name: dist-build-apps-and-libs
      location: dist-artifact
      pattern: '**/*.*'
      shared: true

unit-wct-component-playground-tests:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: bash ./resources/ci/scripts/unit-wct-component-playground-tests-docker.sh
    - script: *dist-artifact
  artifacts:
    - name: dist-unit-wct-component-playground-tests
      location: dist-artifact
      pattern: '**/*.*'

e2e-tests-storybook:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: bash ./resources/ci/scripts/e2e-tests-storybook-docker.sh
    - script: *dist-artifact
  artifacts:
    - name: dist-e2e-tests-storybook
      location: dist-artifact
      pattern: '**/*.*'
      shared: true

release-and-publish:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: |
        # export variables
        export test_token=${bamboo.test_token}
        export secret_github_token=${bamboo.secret_github_token}
        export acd_repository_debian_login=${bamboo.acd_repository_debian_login}
        export acd_repository_bamboo_password=${bamboo.acd_repository_bamboo_password}
        export acd_repository_url=${bamboo.acd_repository_url}
        # boot the specific docker container
        bash ./resources/ci/scripts/release-and-publish-docker.sh
  artifacts:
    - name: dist-release-and-publish
      location: dist
      pattern: '**/*.*'

verify-release:
  requirements: *requirements
  tasks:
    - clean
    - script: |
        #!/bin/bash
        # avoid git warning
        git config --global init.defaultBranch develop
    - checkout
    - script: |
        # export variables
        export acd_repository_debian_login=${bamboo.acd_repository_debian_login}
        export acd_repository_bamboo_password=${bamboo.acd_repository_bamboo_password}
        export acd_repository_url=${bamboo.acd_repository_url}
        # boot the specific docker container
        bash ./resources/ci/scripts/verify-release-docker.sh
  artifacts:
    - name: dist-verify-release
      location: dist
      pattern: '**/*.*'

---
version: 2
plan:
  key: UIGOV-CUWC

plan-permissions:
  - groups: developer-admin
    permissions: build

